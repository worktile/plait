@use './mixins.scss' as mixins;

$primary: #4e8afa;

.plait-board-container {
    g[plait-mindmap='true'],
    g[plait-mind-temporary='true'] {
        // The font family under SAFARI affects the measurement of the text size,
        // so specify the default font family to avoid unexpected text breaks in different scene
        font-family: PingFangSC-Regular, 'PingFang SC';
        .root,
        &.root {
            .text {
                font-family: PingFangSC-Medium, 'PingFang SC';
                font-weight: 400;
            }
        }
        .branch {
            .text {
                font-family: PingFangSC-Medium, 'PingFang SC';
            }
        }
        .slate-editable-container {
            cursor: default;
            min-width: 5px;
            &.editing {
                cursor: text;
                max-width: 34em;
            }
        }

        .extend {
            opacity: 0;
            cursor: default;
        }

        .collapsed {
            .extend {
                opacity: 1;
            }
        }

        .dragging-node {
            opacity: 0.6;
        }
    }
    &.focused:not(.selection-moving):not(.element-moving):not(.abstract-resizing-horizontal):not(.abstract-resizing-vertical):not(.pointer-mind):not(.mind-node-dragging) {
        .extend {
            cursor: pointer;
            &:hover {
                opacity: 1;
            }
        }

        g[plait-mindmap='true'] {
            .hovered {
                .extend {
                    opacity: 1;
                }
            }
        }
    }

    &.pointer-hand {
        .board-host-svg {
            cursor: grab;
        }
        .collapsed {
            .extend:hover {
                cursor: grab;
            }
        }
        :not(.collapsed) > .extend {
            display: none;
        }
    }

    &.readonly {
        .collapsed {
            .extend:hover {
                cursor: pointer;
            }
        }
        :not(.collapsed) > .extend {
            display: block;
            .quick-insert {
                display: none;
            }
        }
    }

    &.viewport-moving {
        svg {
            cursor: grabbing;
        }
    }

    &.abstract-resizing-horizontal {
        cursor: ns-resize;
    }

    &.abstract-resizing-vertical {
        cursor: ew-resize;
    }

    .node-emojis-container {
        display: flex;
        position: initial;
        align-items: center;
        height: 100%;
    }

    .fake-node {
        &.dragging {
            cursor: pointer;
            opacity: 0.6;
            // Compact: Safari
            // Opacity property will cause text position warning
            // .plait-richtext-container {
            //     opacity: 0.6;
            // }
        }
    }

    .root {
        .plait-richtext-container {
            font-size: 18px;
            min-height: 25px;
            line-height: 25px;
        }
    }

    .mind-node-image img {
        margin: 6px;
    }

    @include mixins.node-color();
}
